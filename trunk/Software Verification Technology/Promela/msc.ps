%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%Title: Window .f.fSp.pw.f0.frame.sw.topf.middle.f1.frame.middle.right
%%CreationDate: Sat Nov 26 20:22:39 2011
%%BoundingBox: 67 294 545 498
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Helvetica
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/Euro/space/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
/circumflex/perthousand/Scaron/guilsinglleft/OE/space/Zcaron/space
/space/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
/tilde/trademark/scaron/guilsinglright/oe/space/zcaron/Ydieresis
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Helvetica
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.7494 0.7494 scale
-465 -136 translate
147 272 moveto 783 272 lineto 783 0 lineto 147 0 lineto closepath clip newpath
gsave
600 290 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 290 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 280 [
[(1!desert,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
212 330 moveto
212 270 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 270 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 270 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 260 [
[(1?desert,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
600 280 moveto
251.997170562646 260.114124032151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
250 260 moveto
255.19258636013 256.790007960665 lineto
253.309804746146 259.688316038552 lineto
253.252754955608 260.686687372976 lineto
254.793123726779 263.780604044301 lineto
250 260 lineto
fill
grestore
gsave
212 250 moveto
212 250 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 250 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 250 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 240 [
[(2!desert,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
637 270 moveto
637 230 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
600 230 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 230 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 220 [
[(2?desert,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
250 240 moveto
598.002829437354 220.114124032151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
600 220 moveto
595.206876273221 223.780604044301 lineto
596.747245044392 220.686687372976 lineto
596.690195253854 219.688316038552 lineto
594.80741363987 216.790007960665 lineto
600 220 lineto
fill
grestore
gsave
637 210 moveto
637 210 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
600 210 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 210 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 200 [
[(1!main,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
212 230 moveto
212 190 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 190 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 190 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 180 [
[(1?main,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
600 200 moveto
251.997170562646 180.114124032151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
250 180 moveto
255.19258636013 176.790007960665 lineto
253.309804746146 179.688316038552 lineto
253.252754955608 180.686687372976 lineto
254.793123726779 183.780604044301 lineto
250 180 lineto
fill
grestore
gsave
212 170 moveto
212 170 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 170 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 170 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 160 [
[(2!main,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
637 190 moveto
637 150 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
600 150 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 150 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 140 [
[(2?main,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
250 160 moveto
598.002829437354 140.114124032151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
600 140 moveto
595.206876273221 143.780604044301 lineto
596.747245044392 140.686687372976 lineto
596.690195253854 139.688316038552 lineto
594.80741363987 136.790007960665 lineto
600 140 lineto
fill
grestore
gsave
637 130 moveto
637 130 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
600 130 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 130 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 120 [
[(1!drink,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
212 150 moveto
212 110 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 110 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 110 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 100 [
[(1?drink,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
600 120 moveto
251.997170562646 100.114124032151 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
250 100 moveto
255.19258636013 96.7900079606648 lineto
253.309804746146 99.6883160385523 lineto
253.252754955608 100.686687372976 lineto
254.793123726779 103.780604044301 lineto
250 100 lineto
fill
grestore
gsave
212 90 moveto
212 90 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
175 90 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
175 90 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
212 80 [
[(2!drink,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
637 110 moveto
637 70 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.745 0.745 0.745 setrgbcolor AdjustColor
stroke
grestore
gsave
600 70 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
1.000 0.843 0.000 setrgbcolor AdjustColor
fill
600 70 moveto 75 0 rlineto 0 -20 rlineto -75 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Helvetica findfont 10 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
637 60 [
[(2?drink,5)]
] 16 -0.5 0.5 0 false DrawText
grestore
gsave
250 80 moveto
598.002829437354 60.1141240321512 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
600 60 moveto
595.206876273221 63.7806040443015 lineto
596.747245044392 60.6866873729764 lineto
596.690195253854 59.6883160385523 lineto
594.80741363987 56.7900079606649 lineto
600 60 lineto
fill
grestore
gsave
30 50 moveto
675 50 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[8 2] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
